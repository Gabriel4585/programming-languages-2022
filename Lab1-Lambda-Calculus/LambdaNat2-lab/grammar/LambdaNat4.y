/* This Bison file was machine-generated by BNFC */

/* Turn on line/column tracking in the lambda_nat_lloc structure: */
%locations

%{
/* Begin C preamble code */

#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include "Absyn.h"

#define YYMAXDEPTH 10000000

typedef struct lambda_nat__buffer_state *YY_BUFFER_STATE;
YY_BUFFER_STATE lambda_nat__scan_string(const char *str);
void lambda_nat__delete_buffer(YY_BUFFER_STATE buf);
extern int yyparse(void);
extern int yylex(void);
extern int lambda_nat__init_lexer(FILE * inp);
extern void yyerror(const char *str);

ListExp reverseListExp(ListExp l)
{
  ListExp prev = 0;
  ListExp tmp = 0;
  while (l)
  {
    tmp = l->listexp_;
    l->listexp_ = prev;
    prev = l;
    l = tmp;
  }
  return prev;
}

/* Global variables holding parse results for entrypoints. */
Program YY_RESULT_Program_ = 0;
ListExp YY_RESULT_ListExp_ = 0;
Exp YY_RESULT_Exp_ = 0;

/* Entrypoint: parse Program from file. */
Program pProgram(FILE *inp)
{
  lambda_nat__init_lexer(inp);
  int result = yyparse();
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Program_;
  }
}

/* Entrypoint: parse Program from string. */
Program psProgram(const char *str)
{
  YY_BUFFER_STATE buf;
  lambda_nat__init_lexer(0);
  buf = lambda_nat__scan_string(str);
  int result = yyparse();
  lambda_nat__delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Program_;
  }
}

/* Entrypoint: parse ListExp from file. */
ListExp pListExp(FILE *inp)
{
  lambda_nat__init_lexer(inp);
  int result = yyparse();
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_ListExp_;
  }
}

/* Entrypoint: parse ListExp from string. */
ListExp psListExp(const char *str)
{
  YY_BUFFER_STATE buf;
  lambda_nat__init_lexer(0);
  buf = lambda_nat__scan_string(str);
  int result = yyparse();
  lambda_nat__delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_ListExp_;
  }
}

/* Entrypoint: parse Exp from file. */
Exp pExp1(FILE *inp)
{
  lambda_nat__init_lexer(inp);
  int result = yyparse();
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Exp_;
  }
}

/* Entrypoint: parse Exp from string. */
Exp psExp1(const char *str)
{
  YY_BUFFER_STATE buf;
  lambda_nat__init_lexer(0);
  buf = lambda_nat__scan_string(str);
  int result = yyparse();
  lambda_nat__delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Exp_;
  }
}

/* Entrypoint: parse Exp from file. */
Exp pExp2(FILE *inp)
{
  lambda_nat__init_lexer(inp);
  int result = yyparse();
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Exp_;
  }
}

/* Entrypoint: parse Exp from string. */
Exp psExp2(const char *str)
{
  YY_BUFFER_STATE buf;
  lambda_nat__init_lexer(0);
  buf = lambda_nat__scan_string(str);
  int result = yyparse();
  lambda_nat__delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Exp_;
  }
}

/* Entrypoint: parse Exp from file. */
Exp pExp3(FILE *inp)
{
  lambda_nat__init_lexer(inp);
  int result = yyparse();
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Exp_;
  }
}

/* Entrypoint: parse Exp from string. */
Exp psExp3(const char *str)
{
  YY_BUFFER_STATE buf;
  lambda_nat__init_lexer(0);
  buf = lambda_nat__scan_string(str);
  int result = yyparse();
  lambda_nat__delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Exp_;
  }
}

/* Entrypoint: parse Exp from file. */
Exp pExp4(FILE *inp)
{
  lambda_nat__init_lexer(inp);
  int result = yyparse();
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Exp_;
  }
}

/* Entrypoint: parse Exp from string. */
Exp psExp4(const char *str)
{
  YY_BUFFER_STATE buf;
  lambda_nat__init_lexer(0);
  buf = lambda_nat__scan_string(str);
  int result = yyparse();
  lambda_nat__delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Exp_;
  }
}

/* Entrypoint: parse Exp from file. */
Exp pExp6(FILE *inp)
{
  lambda_nat__init_lexer(inp);
  int result = yyparse();
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Exp_;
  }
}

/* Entrypoint: parse Exp from string. */
Exp psExp6(const char *str)
{
  YY_BUFFER_STATE buf;
  lambda_nat__init_lexer(0);
  buf = lambda_nat__scan_string(str);
  int result = yyparse();
  lambda_nat__delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Exp_;
  }
}

/* Entrypoint: parse Exp from file. */
Exp pExp9(FILE *inp)
{
  lambda_nat__init_lexer(inp);
  int result = yyparse();
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Exp_;
  }
}

/* Entrypoint: parse Exp from string. */
Exp psExp9(const char *str)
{
  YY_BUFFER_STATE buf;
  lambda_nat__init_lexer(0);
  buf = lambda_nat__scan_string(str);
  int result = yyparse();
  lambda_nat__delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Exp_;
  }
}

/* Entrypoint: parse Exp from file. */
Exp pExp10(FILE *inp)
{
  lambda_nat__init_lexer(inp);
  int result = yyparse();
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Exp_;
  }
}

/* Entrypoint: parse Exp from string. */
Exp psExp10(const char *str)
{
  YY_BUFFER_STATE buf;
  lambda_nat__init_lexer(0);
  buf = lambda_nat__scan_string(str);
  int result = yyparse();
  lambda_nat__delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Exp_;
  }
}

/* Entrypoint: parse Exp from file. */
Exp pExp13(FILE *inp)
{
  lambda_nat__init_lexer(inp);
  int result = yyparse();
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Exp_;
  }
}

/* Entrypoint: parse Exp from string. */
Exp psExp13(const char *str)
{
  YY_BUFFER_STATE buf;
  lambda_nat__init_lexer(0);
  buf = lambda_nat__scan_string(str);
  int result = yyparse();
  lambda_nat__delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Exp_;
  }
}

/* Entrypoint: parse Exp from file. */
Exp pExp15(FILE *inp)
{
  lambda_nat__init_lexer(inp);
  int result = yyparse();
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Exp_;
  }
}

/* Entrypoint: parse Exp from string. */
Exp psExp15(const char *str)
{
  YY_BUFFER_STATE buf;
  lambda_nat__init_lexer(0);
  buf = lambda_nat__scan_string(str);
  int result = yyparse();
  lambda_nat__delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Exp_;
  }
}

/* Entrypoint: parse Exp from file. */
Exp pExp16(FILE *inp)
{
  lambda_nat__init_lexer(inp);
  int result = yyparse();
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Exp_;
  }
}

/* Entrypoint: parse Exp from string. */
Exp psExp16(const char *str)
{
  YY_BUFFER_STATE buf;
  lambda_nat__init_lexer(0);
  buf = lambda_nat__scan_string(str);
  int result = yyparse();
  lambda_nat__delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Exp_;
  }
}

/* Entrypoint: parse Exp from file. */
Exp pExp17(FILE *inp)
{
  lambda_nat__init_lexer(inp);
  int result = yyparse();
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Exp_;
  }
}

/* Entrypoint: parse Exp from string. */
Exp psExp17(const char *str)
{
  YY_BUFFER_STATE buf;
  lambda_nat__init_lexer(0);
  buf = lambda_nat__scan_string(str);
  int result = yyparse();
  lambda_nat__delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Exp_;
  }
}

/* Entrypoint: parse Exp from file. */
Exp pExp(FILE *inp)
{
  lambda_nat__init_lexer(inp);
  int result = yyparse();
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Exp_;
  }
}

/* Entrypoint: parse Exp from string. */
Exp psExp(const char *str)
{
  YY_BUFFER_STATE buf;
  lambda_nat__init_lexer(0);
  buf = lambda_nat__scan_string(str);
  int result = yyparse();
  lambda_nat__delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Exp_;
  }
}

/* Entrypoint: parse Exp from file. */
Exp pExp5(FILE *inp)
{
  lambda_nat__init_lexer(inp);
  int result = yyparse();
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Exp_;
  }
}

/* Entrypoint: parse Exp from string. */
Exp psExp5(const char *str)
{
  YY_BUFFER_STATE buf;
  lambda_nat__init_lexer(0);
  buf = lambda_nat__scan_string(str);
  int result = yyparse();
  lambda_nat__delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Exp_;
  }
}

/* Entrypoint: parse Exp from file. */
Exp pExp7(FILE *inp)
{
  lambda_nat__init_lexer(inp);
  int result = yyparse();
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Exp_;
  }
}

/* Entrypoint: parse Exp from string. */
Exp psExp7(const char *str)
{
  YY_BUFFER_STATE buf;
  lambda_nat__init_lexer(0);
  buf = lambda_nat__scan_string(str);
  int result = yyparse();
  lambda_nat__delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Exp_;
  }
}

/* Entrypoint: parse Exp from file. */
Exp pExp8(FILE *inp)
{
  lambda_nat__init_lexer(inp);
  int result = yyparse();
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Exp_;
  }
}

/* Entrypoint: parse Exp from string. */
Exp psExp8(const char *str)
{
  YY_BUFFER_STATE buf;
  lambda_nat__init_lexer(0);
  buf = lambda_nat__scan_string(str);
  int result = yyparse();
  lambda_nat__delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Exp_;
  }
}

/* Entrypoint: parse Exp from file. */
Exp pExp11(FILE *inp)
{
  lambda_nat__init_lexer(inp);
  int result = yyparse();
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Exp_;
  }
}

/* Entrypoint: parse Exp from string. */
Exp psExp11(const char *str)
{
  YY_BUFFER_STATE buf;
  lambda_nat__init_lexer(0);
  buf = lambda_nat__scan_string(str);
  int result = yyparse();
  lambda_nat__delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Exp_;
  }
}

/* Entrypoint: parse Exp from file. */
Exp pExp12(FILE *inp)
{
  lambda_nat__init_lexer(inp);
  int result = yyparse();
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Exp_;
  }
}

/* Entrypoint: parse Exp from string. */
Exp psExp12(const char *str)
{
  YY_BUFFER_STATE buf;
  lambda_nat__init_lexer(0);
  buf = lambda_nat__scan_string(str);
  int result = yyparse();
  lambda_nat__delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Exp_;
  }
}

/* Entrypoint: parse Exp from file. */
Exp pExp14(FILE *inp)
{
  lambda_nat__init_lexer(inp);
  int result = yyparse();
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Exp_;
  }
}

/* Entrypoint: parse Exp from string. */
Exp psExp14(const char *str)
{
  YY_BUFFER_STATE buf;
  lambda_nat__init_lexer(0);
  buf = lambda_nat__scan_string(str);
  int result = yyparse();
  lambda_nat__delete_buffer(buf);
  if (result)
  { /* Failure */
    return 0;
  }
  else
  { /* Success */
    return YY_RESULT_Exp_;
  }
}


/* End C preamble code */
%}

/* The type of a parse result (yylval). */
%union
{
  int    _int;
  char   _char;
  double _double;
  char*  _string;
  Program program_;
  ListExp listexp_;
  Exp exp_;
}

%token _ERROR_
%token _SYMB_7    /*   #   */
%token _SYMB_9    /*   (   */
%token _SYMB_10    /*   )   */
%token _SYMB_6    /*   *   */
%token _SYMB_4    /*   +   */
%token _SYMB_5    /*   -   */
%token _SYMB_2    /*   .   */
%token _SYMB_8    /*   :   */
%token _SYMB_0    /*   ;;   */
%token _SYMB_3    /*   =   */
%token _SYMB_1    /*   \\   */
%token _SYMB_11    /*   else   */
%token _SYMB_12    /*   hd   */
%token _SYMB_13    /*   if   */
%token _SYMB_14    /*   in   */
%token _SYMB_15    /*   less_equal   */
%token _SYMB_16    /*   let   */
%token _SYMB_17    /*   rec   */
%token _SYMB_18    /*   then   */
%token _SYMB_19    /*   tl   */
%token<_string> _SYMB_20    /*   Id   */

%type <program_> Program
%type <listexp_> ListExp
%type <exp_> Exp1
%type <exp_> Exp2
%type <exp_> Exp3
%type <exp_> Exp4
%type <exp_> Exp6
%type <exp_> Exp9
%type <exp_> Exp10
%type <exp_> Exp13
%type <exp_> Exp15
%type <exp_> Exp16
%type <exp_> Exp17
%type <exp_> Exp
%type <exp_> Exp5
%type <exp_> Exp7
%type <exp_> Exp8
%type <exp_> Exp11
%type <exp_> Exp12
%type <exp_> Exp14

%token<_int>    _INTEGER_

%start Program

%%

Program : ListExp { $$ = make_Prog($1); YY_RESULT_Program_= $$; }
;
ListExp : /* empty */ { $$ = 0; YY_RESULT_ListExp_= $$; }
  | Exp { $$ = make_ListExp($1, 0); YY_RESULT_ListExp_= $$; }
  | Exp _SYMB_0 ListExp { $$ = make_ListExp($1, $3); YY_RESULT_ListExp_= $$; }
;
Exp1 : _SYMB_1 _SYMB_20 _SYMB_2 Exp { $$ = make_EAbs($2, $4); YY_RESULT_Exp_= $$; }
  | Exp2 { $$ = $1; YY_RESULT_Exp_= $$; }
;
Exp2 : _SYMB_13 Exp _SYMB_3 Exp _SYMB_18 Exp _SYMB_11 Exp { $$ = make_EIf($2, $4, $6, $8); YY_RESULT_Exp_= $$; }
  | Exp3 { $$ = $1; YY_RESULT_Exp_= $$; }
;
Exp3 : _SYMB_16 _SYMB_20 _SYMB_3 Exp _SYMB_14 Exp { $$ = make_ELet($2, $4, $6); YY_RESULT_Exp_= $$; }
  | Exp4 { $$ = $1; YY_RESULT_Exp_= $$; }
;
Exp4 : _SYMB_16 _SYMB_17 _SYMB_20 _SYMB_3 Exp _SYMB_14 Exp { $$ = make_ERec($3, $5, $7); YY_RESULT_Exp_= $$; }
  | Exp5 { $$ = $1; YY_RESULT_Exp_= $$; }
;
Exp6 : _SYMB_12 Exp { $$ = make_EHd($2); YY_RESULT_Exp_= $$; }
  | _SYMB_19 Exp { $$ = make_ETl($2); YY_RESULT_Exp_= $$; }
  | Exp7 { $$ = $1; YY_RESULT_Exp_= $$; }
;
Exp9 : Exp10 _SYMB_15 Exp10 { $$ = make_ELE($1, $3); YY_RESULT_Exp_= $$; }
  | Exp10 { $$ = $1; YY_RESULT_Exp_= $$; }
;
Exp10 : Exp10 _SYMB_4 Exp11 { $$ = make_EPlus($1, $3); YY_RESULT_Exp_= $$; }
  | Exp10 _SYMB_5 Exp11 { $$ = make_EMinus($1, $3); YY_RESULT_Exp_= $$; }
  | Exp11 _SYMB_6 Exp12 { $$ = make_ETimes($1, $3); YY_RESULT_Exp_= $$; }
  | Exp11 { $$ = $1; YY_RESULT_Exp_= $$; }
;
Exp13 : Exp13 Exp14 { $$ = make_EApp($1, $2); YY_RESULT_Exp_= $$; }
  | Exp14 { $$ = $1; YY_RESULT_Exp_= $$; }
;
Exp15 : _SYMB_7 { $$ = make_ENil(); YY_RESULT_Exp_= $$; }
  | Exp16 _SYMB_8 Exp15 { $$ = make_ECons($1, $3); YY_RESULT_Exp_= $$; }
  | Exp16 { $$ = $1; YY_RESULT_Exp_= $$; }
;
Exp16 : _INTEGER_ { $$ = make_EInt($1); YY_RESULT_Exp_= $$; }
  | Exp17 { $$ = $1; YY_RESULT_Exp_= $$; }
;
Exp17 : _SYMB_20 { $$ = make_EVar($1); YY_RESULT_Exp_= $$; }
  | _SYMB_9 Exp _SYMB_10 { $$ = $2; YY_RESULT_Exp_= $$; }
;
Exp : Exp1 { $$ = $1; YY_RESULT_Exp_= $$; }
;
Exp5 : Exp6 { $$ = $1; YY_RESULT_Exp_= $$; }
;
Exp7 : Exp8 { $$ = $1; YY_RESULT_Exp_= $$; }
;
Exp8 : Exp9 { $$ = $1; YY_RESULT_Exp_= $$; }
;
Exp11 : Exp12 { $$ = $1; YY_RESULT_Exp_= $$; }
;
Exp12 : Exp13 { $$ = $1; YY_RESULT_Exp_= $$; }
;
Exp14 : Exp15 { $$ = $1; YY_RESULT_Exp_= $$; }
;

%%

void yyerror(const char *str)
{
  extern char *lambda_nat_text;
  fprintf(stderr,"error: %d,%d: %s at %s\n",
  lambda_nat_lloc.first_line, lambda_nat_lloc.first_column, str, lambda_nat_text);
}

