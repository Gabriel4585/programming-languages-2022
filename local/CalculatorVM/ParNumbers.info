-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.9 from ParNumbers.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pExp -> Exp                                 (0)
	%start_pExp1 -> Exp1                               (1)
	%start_pExp2 -> Exp2                               (2)
	%start_pQQ -> QQ                                   (3)
	%start_pII -> II                                   (4)
	%start_pNN -> NN                                   (5)
	%start_pPP -> PP                                   (6)
	Exp -> Exp '+' Exp1                                (7)
	Exp -> Exp1                                        (8)
	Exp1 -> Exp1 '*' Exp2                              (9)
	Exp1 -> Exp2                                       (10)
	Exp2 -> QQ                                         (11)
	Exp2 -> '(' Exp ')'                                (12)
	QQ -> II '/' PP                                    (13)
	II -> '(' NN ',' NN ')'                            (14)
	NN -> 'O'                                          (15)
	NN -> 'S' NN                                       (16)
	PP -> 'I'                                          (17)
	PP -> 'T' PP                                       (18)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'('            { PT _ (TS _ 1) }
	')'            { PT _ (TS _ 2) }
	'*'            { PT _ (TS _ 3) }
	'+'            { PT _ (TS _ 4) }
	','            { PT _ (TS _ 5) }
	'/'            { PT _ (TS _ 6) }
	'I'            { PT _ (TS _ 7) }
	'O'            { PT _ (TS _ 8) }
	'S'            { PT _ (TS _ 9) }
	'T'            { PT _ (TS _ 10) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pExp     rule  0
	%start_pExp1    rule  1
	%start_pExp2    rule  2
	%start_pQQ      rule  3
	%start_pII      rule  4
	%start_pNN      rule  5
	%start_pPP      rule  6
	Exp             rules 7, 8
	Exp1            rules 9, 10
	Exp2            rules 11, 12
	QQ              rule  13
	II              rule  14
	NN              rules 15, 16
	PP              rules 17, 18

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'('            shift, and enter state 13

	Exp            goto state 25
	Exp1           goto state 9
	Exp2           goto state 10
	QQ             goto state 11
	II             goto state 12

State 1


	'('            shift, and enter state 13

	Exp1           goto state 24
	Exp2           goto state 10
	QQ             goto state 11
	II             goto state 12

State 2


	'('            shift, and enter state 13

	Exp2           goto state 23
	QQ             goto state 11
	II             goto state 12

State 3


	'('            shift, and enter state 21

	QQ             goto state 22
	II             goto state 12

State 4


	'('            shift, and enter state 21

	II             goto state 20

State 5


	'O'            shift, and enter state 18
	'S'            shift, and enter state 19

	NN             goto state 17

State 6


	'I'            shift, and enter state 15
	'T'            shift, and enter state 16

	PP             goto state 14

State 7


	'('            shift, and enter state 13

	Exp            goto state 8
	Exp1           goto state 9
	Exp2           goto state 10
	QQ             goto state 11
	II             goto state 12

State 8

	Exp -> Exp . '+' Exp1                               (rule 7)

	'+'            shift, and enter state 26


State 9

	Exp -> Exp1 .                                       (rule 8)
	Exp1 -> Exp1 . '*' Exp2                             (rule 9)

	')'            reduce using rule 8
	'*'            shift, and enter state 27
	'+'            reduce using rule 8
	%eof           reduce using rule 8


State 10

	Exp1 -> Exp2 .                                      (rule 10)

	')'            reduce using rule 10
	'*'            reduce using rule 10
	'+'            reduce using rule 10
	%eof           reduce using rule 10


State 11

	Exp2 -> QQ .                                        (rule 11)

	')'            reduce using rule 11
	'*'            reduce using rule 11
	'+'            reduce using rule 11
	%eof           reduce using rule 11


State 12

	QQ -> II . '/' PP                                   (rule 13)

	'/'            shift, and enter state 32


State 13

	Exp2 -> '(' . Exp ')'                               (rule 12)
	II -> '(' . NN ',' NN ')'                           (rule 14)

	'('            shift, and enter state 13
	'O'            shift, and enter state 18
	'S'            shift, and enter state 19

	Exp            goto state 31
	Exp1           goto state 9
	Exp2           goto state 10
	QQ             goto state 11
	II             goto state 12
	NN             goto state 28

State 14

	%start_pPP -> PP .                                  (rule 6)

	%eof           accept


State 15

	PP -> 'I' .                                         (rule 17)

	')'            reduce using rule 17
	'*'            reduce using rule 17
	'+'            reduce using rule 17
	%eof           reduce using rule 17


State 16

	PP -> 'T' . PP                                      (rule 18)

	'I'            shift, and enter state 15
	'T'            shift, and enter state 16

	PP             goto state 30

State 17

	%start_pNN -> NN .                                  (rule 5)

	%eof           accept


State 18

	NN -> 'O' .                                         (rule 15)

	')'            reduce using rule 15
	','            reduce using rule 15
	%eof           reduce using rule 15


State 19

	NN -> 'S' . NN                                      (rule 16)

	'O'            shift, and enter state 18
	'S'            shift, and enter state 19

	NN             goto state 29

State 20

	%start_pII -> II .                                  (rule 4)

	%eof           accept


State 21

	II -> '(' . NN ',' NN ')'                           (rule 14)

	'O'            shift, and enter state 18
	'S'            shift, and enter state 19

	NN             goto state 28

State 22

	%start_pQQ -> QQ .                                  (rule 3)

	%eof           accept


State 23

	%start_pExp2 -> Exp2 .                              (rule 2)

	%eof           accept


State 24

	%start_pExp1 -> Exp1 .                              (rule 1)
	Exp1 -> Exp1 . '*' Exp2                             (rule 9)

	'*'            shift, and enter state 27
	%eof           accept


State 25

	%start_pExp -> Exp .                                (rule 0)
	Exp -> Exp . '+' Exp1                               (rule 7)

	'+'            shift, and enter state 26
	%eof           accept


State 26

	Exp -> Exp '+' . Exp1                               (rule 7)

	'('            shift, and enter state 13

	Exp1           goto state 37
	Exp2           goto state 10
	QQ             goto state 11
	II             goto state 12

State 27

	Exp1 -> Exp1 '*' . Exp2                             (rule 9)

	'('            shift, and enter state 13

	Exp2           goto state 36
	QQ             goto state 11
	II             goto state 12

State 28

	II -> '(' NN . ',' NN ')'                           (rule 14)

	','            shift, and enter state 35


State 29

	NN -> 'S' NN .                                      (rule 16)

	')'            reduce using rule 16
	','            reduce using rule 16
	%eof           reduce using rule 16


State 30

	PP -> 'T' PP .                                      (rule 18)

	')'            reduce using rule 18
	'*'            reduce using rule 18
	'+'            reduce using rule 18
	%eof           reduce using rule 18


State 31

	Exp -> Exp . '+' Exp1                               (rule 7)
	Exp2 -> '(' Exp . ')'                               (rule 12)

	')'            shift, and enter state 34
	'+'            shift, and enter state 26


State 32

	QQ -> II '/' . PP                                   (rule 13)

	'I'            shift, and enter state 15
	'T'            shift, and enter state 16

	PP             goto state 33

State 33

	QQ -> II '/' PP .                                   (rule 13)

	')'            reduce using rule 13
	'*'            reduce using rule 13
	'+'            reduce using rule 13
	%eof           reduce using rule 13


State 34

	Exp2 -> '(' Exp ')' .                               (rule 12)

	')'            reduce using rule 12
	'*'            reduce using rule 12
	'+'            reduce using rule 12
	%eof           reduce using rule 12


State 35

	II -> '(' NN ',' . NN ')'                           (rule 14)

	'O'            shift, and enter state 18
	'S'            shift, and enter state 19

	NN             goto state 38

State 36

	Exp1 -> Exp1 '*' Exp2 .                             (rule 9)

	')'            reduce using rule 9
	'*'            reduce using rule 9
	'+'            reduce using rule 9
	%eof           reduce using rule 9


State 37

	Exp -> Exp '+' Exp1 .                               (rule 7)
	Exp1 -> Exp1 . '*' Exp2                             (rule 9)

	')'            reduce using rule 7
	'*'            shift, and enter state 27
	'+'            reduce using rule 7
	%eof           reduce using rule 7


State 38

	II -> '(' NN ',' NN . ')'                           (rule 14)

	')'            shift, and enter state 39


State 39

	II -> '(' NN ',' NN ')' .                           (rule 14)

	'/'            reduce using rule 14
	%eof           reduce using rule 14


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 19
Number of terminals: 10
Number of non-terminals: 14
Number of states: 40
